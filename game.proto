// run the following command to generate the python classes <from example directory>
// python -m grpc_tools.protoc -I../../../ --python_out=. --pyi_out=. --grpc_python_out=. ../../../game.proto

// run the following commands to generate the CPP objects <from example directory>
// export PATH=export PATH=/home/nszl/42cursus/gomoku/frontend/grpc/bin:$PATH
// protoc -I ../../../  --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` ../../../game.proto
// protoc -I ../../../ --cpp_out=.  ../../../game.proto

syntax = "proto3";

import "google/protobuf/wrappers.proto";

service Game {
	rpc GetGameMeta(Empty) returns (GameMeta) {}
	rpc SetGameMeta(GameMeta) returns (Empty) {}
	rpc Reset(Empty) returns (Empty) {}
	rpc SuggestNextMove(GameState) returns (GameState) {}
	rpc GetLastGameState(Empty) returns (GameState) {}
	rpc PlacePiece(MoveRequest) returns (google.protobuf.BoolValue) {};
}

enum ModeType {
    AI_STANDARD = 0;
    AI_PRO = 1;
    PVP_STANDARD = 2;
	PVP_PRO = 3;
}

message MoveRequest {
    int32 x = 1;
    int32 y = 2;
}

message Empty {}

message GameMeta {
	bool _initialized = 1;
	uint64 last_updated = 2;
	ModeType mode = 3;
	uint64 grid_size = 4;
}

message GameState {
	bytes board = 1;
	uint64 p1_captures = 2;
	uint64 p0_captures = 3;
	uint64 num_turns = 4;
	bool is_end = 5;
	uint64 time_to_think_ns = 6;
}