// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: game.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_game_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_game_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_game_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_game_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_game_2eproto;
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class GameMeta;
struct GameMetaDefaultTypeInternal;
extern GameMetaDefaultTypeInternal _GameMeta_default_instance_;
class GameState;
struct GameStateDefaultTypeInternal;
extern GameStateDefaultTypeInternal _GameState_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum ModeType : int {
  AI_STANDARD = 0,
  AI_PRO = 1,
  PVP_STANDARD = 2,
  PVP_PRO = 3,
  ModeType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ModeType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ModeType_IsValid(int value);
extern const uint32_t ModeType_internal_data_[];
constexpr ModeType ModeType_MIN = static_cast<ModeType>(0);
constexpr ModeType ModeType_MAX = static_cast<ModeType>(3);
constexpr int ModeType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ModeType_descriptor();
template <typename T>
const std::string& ModeType_Name(T value) {
  static_assert(std::is_same<T, ModeType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ModeType_Name().");
  return ModeType_Name(static_cast<ModeType>(value));
}
template <>
inline const std::string& ModeType_Name(ModeType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ModeType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ModeType_Parse(absl::string_view name, ModeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModeType>(
      ModeType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GameState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameState) */ {
 public:
  inline GameState() : GameState(nullptr) {}
  ~GameState() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameState(const GameState& from) : GameState(nullptr, from) {}
  inline GameState(GameState&& from) noexcept
      : GameState(nullptr, std::move(from)) {}
  inline GameState& operator=(const GameState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameState& operator=(GameState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameState* internal_default_instance() {
    return reinterpret_cast<const GameState*>(
        &_GameState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GameState& a, GameState& b) { a.Swap(&b); }
  inline void Swap(GameState* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GameState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameState& from) { GameState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameState* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GameState"; }

 protected:
  explicit GameState(::google::protobuf::Arena* arena);
  GameState(::google::protobuf::Arena* arena, const GameState& from);
  GameState(::google::protobuf::Arena* arena, GameState&& from) noexcept
      : GameState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBoardFieldNumber = 1,
    kP1CapturesFieldNumber = 2,
    kP0CapturesFieldNumber = 3,
    kNumTurnsFieldNumber = 4,
    kTimeToThinkNsFieldNumber = 6,
    kIsEndFieldNumber = 5,
  };
  // bytes board = 1;
  void clear_board() ;
  const std::string& board() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_board(Arg_&& arg, Args_... args);
  std::string* mutable_board();
  PROTOBUF_NODISCARD std::string* release_board();
  void set_allocated_board(std::string* value);

  private:
  const std::string& _internal_board() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_board(
      const std::string& value);
  std::string* _internal_mutable_board();

  public:
  // uint64 p1_captures = 2;
  void clear_p1_captures() ;
  ::uint64_t p1_captures() const;
  void set_p1_captures(::uint64_t value);

  private:
  ::uint64_t _internal_p1_captures() const;
  void _internal_set_p1_captures(::uint64_t value);

  public:
  // uint64 p0_captures = 3;
  void clear_p0_captures() ;
  ::uint64_t p0_captures() const;
  void set_p0_captures(::uint64_t value);

  private:
  ::uint64_t _internal_p0_captures() const;
  void _internal_set_p0_captures(::uint64_t value);

  public:
  // uint64 num_turns = 4;
  void clear_num_turns() ;
  ::uint64_t num_turns() const;
  void set_num_turns(::uint64_t value);

  private:
  ::uint64_t _internal_num_turns() const;
  void _internal_set_num_turns(::uint64_t value);

  public:
  // uint64 time_to_think_ns = 6;
  void clear_time_to_think_ns() ;
  ::uint64_t time_to_think_ns() const;
  void set_time_to_think_ns(::uint64_t value);

  private:
  ::uint64_t _internal_time_to_think_ns() const;
  void _internal_set_time_to_think_ns(::uint64_t value);

  public:
  // bool is_end = 5;
  void clear_is_end() ;
  bool is_end() const;
  void set_is_end(bool value);

  private:
  bool _internal_is_end() const;
  void _internal_set_is_end(bool value);

  public:
  // @@protoc_insertion_point(class_scope:GameState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameState_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameState& from_msg);
    ::google::protobuf::internal::ArenaStringPtr board_;
    ::uint64_t p1_captures_;
    ::uint64_t p0_captures_;
    ::uint64_t num_turns_;
    ::uint64_t time_to_think_ns_;
    bool is_end_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class GameMeta final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GameMeta) */ {
 public:
  inline GameMeta() : GameMeta(nullptr) {}
  ~GameMeta() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameMeta(
      ::google::protobuf::internal::ConstantInitialized);

  inline GameMeta(const GameMeta& from) : GameMeta(nullptr, from) {}
  inline GameMeta(GameMeta&& from) noexcept
      : GameMeta(nullptr, std::move(from)) {}
  inline GameMeta& operator=(const GameMeta& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameMeta& operator=(GameMeta&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameMeta& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameMeta* internal_default_instance() {
    return reinterpret_cast<const GameMeta*>(
        &_GameMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GameMeta& a, GameMeta& b) { a.Swap(&b); }
  inline void Swap(GameMeta* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameMeta* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameMeta* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GameMeta>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameMeta& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameMeta& from) { GameMeta::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GameMeta* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "GameMeta"; }

 protected:
  explicit GameMeta(::google::protobuf::Arena* arena);
  GameMeta(::google::protobuf::Arena* arena, const GameMeta& from);
  GameMeta(::google::protobuf::Arena* arena, GameMeta&& from) noexcept
      : GameMeta(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLastUpdatedFieldNumber = 2,
    kInitializedFieldNumber = 1,
    kModeFieldNumber = 3,
    kGridSizeFieldNumber = 4,
  };
  // uint64 last_updated = 2;
  void clear_last_updated() ;
  ::uint64_t last_updated() const;
  void set_last_updated(::uint64_t value);

  private:
  ::uint64_t _internal_last_updated() const;
  void _internal_set_last_updated(::uint64_t value);

  public:
  // bool _initialized = 1;
  void clear__initialized() ;
  bool _initialized() const;
  void set__initialized(bool value);

  private:
  bool _internal__initialized() const;
  void _internal_set__initialized(bool value);

  public:
  // .ModeType mode = 3;
  void clear_mode() ;
  ::ModeType mode() const;
  void set_mode(::ModeType value);

  private:
  ::ModeType _internal_mode() const;
  void _internal_set_mode(::ModeType value);

  public:
  // uint64 grid_size = 4;
  void clear_grid_size() ;
  ::uint64_t grid_size() const;
  void set_grid_size(::uint64_t value);

  private:
  ::uint64_t _internal_grid_size() const;
  void _internal_set_grid_size(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:GameMeta)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GameMeta_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GameMeta& from_msg);
    ::uint64_t last_updated_;
    bool _initialized_;
    int mode_;
    ::uint64_t grid_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_game_2eproto;
};
// -------------------------------------------------------------------

class Empty final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(
      ::google::protobuf::internal::ConstantInitialized);

  inline Empty(const Empty& from) : Empty(nullptr, from) {}
  inline Empty(Empty&& from) noexcept
      : Empty(nullptr, std::move(from)) {}
  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
        &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Empty& a, Empty& b) { a.Swap(&b); }
  inline void Swap(Empty* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Empty"; }

 protected:
  explicit Empty(::google::protobuf::Arena* arena);
  Empty(::google::protobuf::Arena* arena, const Empty& from);
  Empty(::google::protobuf::Arena* arena, Empty&& from) noexcept
      : Empty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:Empty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Empty_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Empty& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_game_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// GameMeta

// bool _initialized = 1;
inline void GameMeta::clear__initialized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._initialized_ = false;
}
inline bool GameMeta::_initialized() const {
  // @@protoc_insertion_point(field_get:GameMeta._initialized)
  return _internal__initialized();
}
inline void GameMeta::set__initialized(bool value) {
  _internal_set__initialized(value);
  // @@protoc_insertion_point(field_set:GameMeta._initialized)
}
inline bool GameMeta::_internal__initialized() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_._initialized_;
}
inline void GameMeta::_internal_set__initialized(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._initialized_ = value;
}

// uint64 last_updated = 2;
inline void GameMeta::clear_last_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_ = ::uint64_t{0u};
}
inline ::uint64_t GameMeta::last_updated() const {
  // @@protoc_insertion_point(field_get:GameMeta.last_updated)
  return _internal_last_updated();
}
inline void GameMeta::set_last_updated(::uint64_t value) {
  _internal_set_last_updated(value);
  // @@protoc_insertion_point(field_set:GameMeta.last_updated)
}
inline ::uint64_t GameMeta::_internal_last_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_updated_;
}
inline void GameMeta::_internal_set_last_updated(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_updated_ = value;
}

// .ModeType mode = 3;
inline void GameMeta::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
}
inline ::ModeType GameMeta::mode() const {
  // @@protoc_insertion_point(field_get:GameMeta.mode)
  return _internal_mode();
}
inline void GameMeta::set_mode(::ModeType value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:GameMeta.mode)
}
inline ::ModeType GameMeta::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ModeType>(_impl_.mode_);
}
inline void GameMeta::_internal_set_mode(::ModeType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// uint64 grid_size = 4;
inline void GameMeta::clear_grid_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_size_ = ::uint64_t{0u};
}
inline ::uint64_t GameMeta::grid_size() const {
  // @@protoc_insertion_point(field_get:GameMeta.grid_size)
  return _internal_grid_size();
}
inline void GameMeta::set_grid_size(::uint64_t value) {
  _internal_set_grid_size(value);
  // @@protoc_insertion_point(field_set:GameMeta.grid_size)
}
inline ::uint64_t GameMeta::_internal_grid_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grid_size_;
}
inline void GameMeta::_internal_set_grid_size(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grid_size_ = value;
}

// -------------------------------------------------------------------

// GameState

// bytes board = 1;
inline void GameState::clear_board() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.board_.ClearToEmpty();
}
inline const std::string& GameState::board() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GameState.board)
  return _internal_board();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameState::set_board(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.board_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GameState.board)
}
inline std::string* GameState::mutable_board() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_board();
  // @@protoc_insertion_point(field_mutable:GameState.board)
  return _s;
}
inline const std::string& GameState::_internal_board() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.board_.Get();
}
inline void GameState::_internal_set_board(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.board_.Set(value, GetArena());
}
inline std::string* GameState::_internal_mutable_board() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.board_.Mutable( GetArena());
}
inline std::string* GameState::release_board() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GameState.board)
  return _impl_.board_.Release();
}
inline void GameState::set_allocated_board(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.board_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.board_.IsDefault()) {
          _impl_.board_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GameState.board)
}

// uint64 p1_captures = 2;
inline void GameState::clear_p1_captures() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p1_captures_ = ::uint64_t{0u};
}
inline ::uint64_t GameState::p1_captures() const {
  // @@protoc_insertion_point(field_get:GameState.p1_captures)
  return _internal_p1_captures();
}
inline void GameState::set_p1_captures(::uint64_t value) {
  _internal_set_p1_captures(value);
  // @@protoc_insertion_point(field_set:GameState.p1_captures)
}
inline ::uint64_t GameState::_internal_p1_captures() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.p1_captures_;
}
inline void GameState::_internal_set_p1_captures(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p1_captures_ = value;
}

// uint64 p0_captures = 3;
inline void GameState::clear_p0_captures() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p0_captures_ = ::uint64_t{0u};
}
inline ::uint64_t GameState::p0_captures() const {
  // @@protoc_insertion_point(field_get:GameState.p0_captures)
  return _internal_p0_captures();
}
inline void GameState::set_p0_captures(::uint64_t value) {
  _internal_set_p0_captures(value);
  // @@protoc_insertion_point(field_set:GameState.p0_captures)
}
inline ::uint64_t GameState::_internal_p0_captures() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.p0_captures_;
}
inline void GameState::_internal_set_p0_captures(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p0_captures_ = value;
}

// uint64 num_turns = 4;
inline void GameState::clear_num_turns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_turns_ = ::uint64_t{0u};
}
inline ::uint64_t GameState::num_turns() const {
  // @@protoc_insertion_point(field_get:GameState.num_turns)
  return _internal_num_turns();
}
inline void GameState::set_num_turns(::uint64_t value) {
  _internal_set_num_turns(value);
  // @@protoc_insertion_point(field_set:GameState.num_turns)
}
inline ::uint64_t GameState::_internal_num_turns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_turns_;
}
inline void GameState::_internal_set_num_turns(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_turns_ = value;
}

// bool is_end = 5;
inline void GameState::clear_is_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_end_ = false;
}
inline bool GameState::is_end() const {
  // @@protoc_insertion_point(field_get:GameState.is_end)
  return _internal_is_end();
}
inline void GameState::set_is_end(bool value) {
  _internal_set_is_end(value);
  // @@protoc_insertion_point(field_set:GameState.is_end)
}
inline bool GameState::_internal_is_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_end_;
}
inline void GameState::_internal_set_is_end(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_end_ = value;
}

// uint64 time_to_think_ns = 6;
inline void GameState::clear_time_to_think_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_to_think_ns_ = ::uint64_t{0u};
}
inline ::uint64_t GameState::time_to_think_ns() const {
  // @@protoc_insertion_point(field_get:GameState.time_to_think_ns)
  return _internal_time_to_think_ns();
}
inline void GameState::set_time_to_think_ns(::uint64_t value) {
  _internal_set_time_to_think_ns(value);
  // @@protoc_insertion_point(field_set:GameState.time_to_think_ns)
}
inline ::uint64_t GameState::_internal_time_to_think_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_to_think_ns_;
}
inline void GameState::_internal_set_time_to_think_ns(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_to_think_ns_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ModeType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ModeType>() {
  return ::ModeType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_game_2eproto_2epb_2eh
