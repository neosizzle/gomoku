// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: game.proto
// Protobuf C++ Version: 5.27.2

#include "game.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr GameState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : board_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        p1_captures_{::uint64_t{0u}},
        p0_captures_{::uint64_t{0u}},
        num_turns_{::uint64_t{0u}},
        is_end_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameState::GameState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameStateDefaultTypeInternal() {}
  union {
    GameState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameStateDefaultTypeInternal _GameState_default_instance_;

inline constexpr GameMeta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gameid_{::uint64_t{0u}},
        _initialized_{false},
        mode_{static_cast< ::ModeType >(0)},
        gridsize_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameMeta::GameMeta(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameMetaDefaultTypeInternal() {}
  union {
    GameMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameMetaDefaultTypeInternal _GameMeta_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_game_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_game_2eproto = nullptr;
const ::uint32_t
    TableStruct_game_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GameMeta, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GameMeta, _impl_._initialized_),
        PROTOBUF_FIELD_OFFSET(::GameMeta, _impl_.gameid_),
        PROTOBUF_FIELD_OFFSET(::GameMeta, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::GameMeta, _impl_.gridsize_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::GameState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GameState, _impl_.board_),
        PROTOBUF_FIELD_OFFSET(::GameState, _impl_.p1_captures_),
        PROTOBUF_FIELD_OFFSET(::GameState, _impl_.p0_captures_),
        PROTOBUF_FIELD_OFFSET(::GameState, _impl_.num_turns_),
        PROTOBUF_FIELD_OFFSET(::GameState, _impl_.is_end_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Empty)},
        {8, -1, -1, sizeof(::GameMeta)},
        {20, -1, -1, sizeof(::GameState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Empty_default_instance_._instance,
    &::_GameMeta_default_instance_._instance,
    &::_GameState_default_instance_._instance,
};
const char descriptor_table_protodef_game_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\ngame.proto\"\007\n\005Empty\"[\n\010GameMeta\022\024\n\014_in"
    "itialized\030\001 \001(\010\022\016\n\006gameId\030\002 \001(\004\022\027\n\004mode\030"
    "\003 \001(\0162\t.ModeType\022\020\n\010gridSize\030\004 \001(\004\"g\n\tGa"
    "meState\022\r\n\005board\030\001 \001(\014\022\023\n\013p1_captures\030\002 "
    "\001(\004\022\023\n\013p0_captures\030\003 \001(\004\022\021\n\tnum_turns\030\004 "
    "\001(\004\022\016\n\006is_end\030\005 \001(\010*F\n\010ModeType\022\017\n\013AI_ST"
    "ANDARD\020\000\022\n\n\006AI_PRO\020\001\022\020\n\014PVP_STANDARD\020\002\022\013"
    "\n\007PVP_PRO\020\0032\300\001\n\004Game\022\"\n\013GetGameMeta\022\006.Em"
    "pty\032\t.GameMeta\"\000\022\"\n\013SetGameMeta\022\t.GameMe"
    "ta\032\006.Empty\"\000\022\031\n\005Reset\022\006.Empty\032\006.Empty\"\000\022"
    "+\n\017SuggestNextMove\022\n.GameState\032\n.GameSta"
    "te\"\000\022(\n\020GetLastGameState\022\006.Empty\032\n.GameS"
    "tate\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_game_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_game_2eproto = {
    false,
    false,
    494,
    descriptor_table_protodef_game_2eproto,
    "game.proto",
    &descriptor_table_game_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_game_2eproto::offsets,
    file_level_enum_descriptors_game_2eproto,
    file_level_service_descriptors_game_2eproto,
};
const ::google::protobuf::EnumDescriptor* ModeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_game_2eproto);
  return file_level_enum_descriptors_game_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ModeType_internal_data_[] = {
    262144u, 0u, };
bool ModeType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Empty)
}

const ::google::protobuf::MessageLite::ClassData*
Empty::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
              false,
          },
          &Empty::MergeImpl,
          &Empty::kDescriptorMethods,
          &descriptor_table_game_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Empty_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameMeta::_Internal {
 public:
};

GameMeta::GameMeta(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GameMeta)
}
GameMeta::GameMeta(
    ::google::protobuf::Arena* arena, const GameMeta& from)
    : GameMeta(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GameMeta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GameMeta::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gameid_),
           0,
           offsetof(Impl_, gridsize_) -
               offsetof(Impl_, gameid_) +
               sizeof(Impl_::gridsize_));
}
GameMeta::~GameMeta() {
  // @@protoc_insertion_point(destructor:GameMeta)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameMeta::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameMeta::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GameMeta, _impl_._cached_size_),
              false,
          },
          &GameMeta::MergeImpl,
          &GameMeta::kDescriptorMethods,
          &descriptor_table_game_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> GameMeta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GameMeta_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GameMeta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 gridSize = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameMeta, _impl_.gridsize_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.gridsize_)}},
    // bool _initialized = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GameMeta, _impl_._initialized_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameMeta, _impl_._initialized_)}},
    // uint64 gameId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameMeta, _impl_.gameid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.gameid_)}},
    // .ModeType mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameMeta, _impl_.mode_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool _initialized = 1;
    {PROTOBUF_FIELD_OFFSET(GameMeta, _impl_._initialized_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 gameId = 2;
    {PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.gameid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .ModeType mode = 3;
    {PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 gridSize = 4;
    {PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.gridsize_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMeta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gameid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gridsize_) -
      reinterpret_cast<char*>(&_impl_.gameid_)) + sizeof(_impl_.gridsize_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GameMeta::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GameMeta)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool _initialized = 1;
  if (this->_internal__initialized() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal__initialized(), target);
  }

  // uint64 gameId = 2;
  if (this->_internal_gameid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_gameid(), target);
  }

  // .ModeType mode = 3;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_mode(), target);
  }

  // uint64 gridSize = 4;
  if (this->_internal_gridsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_gridsize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMeta)
  return target;
}

::size_t GameMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMeta)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint64 gameId = 2;
  if (this->_internal_gameid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gameid());
  }

  // bool _initialized = 1;
  if (this->_internal__initialized() != 0) {
    total_size += 2;
  }

  // .ModeType mode = 3;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  // uint64 gridSize = 4;
  if (this->_internal_gridsize() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gridsize());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameMeta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameMeta*>(&to_msg);
  auto& from = static_cast<const GameMeta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GameMeta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gameid() != 0) {
    _this->_impl_.gameid_ = from._impl_.gameid_;
  }
  if (from._internal__initialized() != 0) {
    _this->_impl_._initialized_ = from._impl_._initialized_;
  }
  if (from._internal_mode() != 0) {
    _this->_impl_.mode_ = from._impl_.mode_;
  }
  if (from._internal_gridsize() != 0) {
    _this->_impl_.gridsize_ = from._impl_.gridsize_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameMeta::CopyFrom(const GameMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameMeta::InternalSwap(GameMeta* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.gridsize_)
      + sizeof(GameMeta::_impl_.gridsize_)
      - PROTOBUF_FIELD_OFFSET(GameMeta, _impl_.gameid_)>(
          reinterpret_cast<char*>(&_impl_.gameid_),
          reinterpret_cast<char*>(&other->_impl_.gameid_));
}

::google::protobuf::Metadata GameMeta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GameState::_Internal {
 public:
};

GameState::GameState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GameState)
}
inline PROTOBUF_NDEBUG_INLINE GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::GameState& from_msg)
      : board_(arena, from.board_),
        _cached_size_{0} {}

GameState::GameState(
    ::google::protobuf::Arena* arena,
    const GameState& from)
    : ::google::protobuf::Message(arena) {
  GameState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, p1_captures_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, p1_captures_),
           offsetof(Impl_, is_end_) -
               offsetof(Impl_, p1_captures_) +
               sizeof(Impl_::is_end_));

  // @@protoc_insertion_point(copy_constructor:GameState)
}
inline PROTOBUF_NDEBUG_INLINE GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : board_(arena),
        _cached_size_{0} {}

inline void GameState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, p1_captures_),
           0,
           offsetof(Impl_, is_end_) -
               offsetof(Impl_, p1_captures_) +
               sizeof(Impl_::is_end_));
}
GameState::~GameState() {
  // @@protoc_insertion_point(destructor:GameState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.board_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameState::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GameState, _impl_._cached_size_),
              false,
          },
          &GameState::MergeImpl,
          &GameState::kDescriptorMethods,
          &descriptor_table_game_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> GameState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GameState_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GameState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes board = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.board_)}},
    // uint64 p1_captures = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameState, _impl_.p1_captures_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.p1_captures_)}},
    // uint64 p0_captures = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameState, _impl_.p0_captures_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.p0_captures_)}},
    // uint64 num_turns = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameState, _impl_.num_turns_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.num_turns_)}},
    // bool is_end = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GameState, _impl_.is_end_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GameState, _impl_.is_end_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes board = 1;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.board_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 p1_captures = 2;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.p1_captures_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 p0_captures = 3;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.p0_captures_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 num_turns = 4;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.num_turns_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_end = 5;
    {PROTOBUF_FIELD_OFFSET(GameState, _impl_.is_end_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:GameState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.board_.ClearToEmpty();
  ::memset(&_impl_.p1_captures_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_end_) -
      reinterpret_cast<char*>(&_impl_.p1_captures_)) + sizeof(_impl_.is_end_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GameState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GameState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes board = 1;
  if (!this->_internal_board().empty()) {
    const std::string& _s = this->_internal_board();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint64 p1_captures = 2;
  if (this->_internal_p1_captures() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_p1_captures(), target);
  }

  // uint64 p0_captures = 3;
  if (this->_internal_p0_captures() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_p0_captures(), target);
  }

  // uint64 num_turns = 4;
  if (this->_internal_num_turns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_num_turns(), target);
  }

  // bool is_end = 5;
  if (this->_internal_is_end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_end(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameState)
  return target;
}

::size_t GameState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes board = 1;
  if (!this->_internal_board().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_board());
  }

  // uint64 p1_captures = 2;
  if (this->_internal_p1_captures() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_p1_captures());
  }

  // uint64 p0_captures = 3;
  if (this->_internal_p0_captures() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_p0_captures());
  }

  // uint64 num_turns = 4;
  if (this->_internal_num_turns() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_num_turns());
  }

  // bool is_end = 5;
  if (this->_internal_is_end() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameState*>(&to_msg);
  auto& from = static_cast<const GameState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GameState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_board().empty()) {
    _this->_internal_set_board(from._internal_board());
  }
  if (from._internal_p1_captures() != 0) {
    _this->_impl_.p1_captures_ = from._impl_.p1_captures_;
  }
  if (from._internal_p0_captures() != 0) {
    _this->_impl_.p0_captures_ = from._impl_.p0_captures_;
  }
  if (from._internal_num_turns() != 0) {
    _this->_impl_.num_turns_ = from._impl_.num_turns_;
  }
  if (from._internal_is_end() != 0) {
    _this->_impl_.is_end_ = from._impl_.is_end_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameState::CopyFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameState::InternalSwap(GameState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.board_, &other->_impl_.board_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameState, _impl_.is_end_)
      + sizeof(GameState::_impl_.is_end_)
      - PROTOBUF_FIELD_OFFSET(GameState, _impl_.p1_captures_)>(
          reinterpret_cast<char*>(&_impl_.p1_captures_),
          reinterpret_cast<char*>(&other->_impl_.p1_captures_));
}

::google::protobuf::Metadata GameState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_game_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
